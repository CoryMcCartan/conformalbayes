[{"path":"https://corymccartan.github.io/conformalbayes/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Cory McCartan Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://corymccartan.github.io/conformalbayes/articles/conformalbayes.html","id":"citations","dir":"Articles","previous_headings":"","what":"Citations","title":"Introduction to conformalbayes","text":"Barber, R. F., Candes, E. J., Ramdas, ., & Tibshirani, R. J. (2021). Predictive inference jackknife+. Annals Statistics, 49(1), 486-507. Lei, J., G’Sell, M., Rinaldo, ., Tibshirani, R. J., & Wasserman, L. (2018). Distribution-free predictive inference regression. Journal American Statistical Association, 113(523), 1094-1111.","code":""},{"path":"https://corymccartan.github.io/conformalbayes/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Cory McCartan. Author, maintainer.","code":""},{"path":"https://corymccartan.github.io/conformalbayes/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"McCartan C (2022). conformalbayes: Jackknife(+) Predictive Intervals Bayesian Models. https://github.com/CoryMcCartan/conformalbayes, https://corymccartan.github.io/conformalbayes/.","code":"@Manual{,   title = {conformalbayes: Jackknife(+) Predictive Intervals for Bayesian Models},   author = {Cory McCartan},   year = {2022},   note = {https://github.com/CoryMcCartan/conformalbayes, https://corymccartan.github.io/conformalbayes/}, }"},{"path":"https://corymccartan.github.io/conformalbayes/index.html","id":"conformalbayes-","dir":"","previous_headings":"","what":"Jackknife(+) Predictive Intervals for Bayesian Models","title":"Jackknife(+) Predictive Intervals for Bayesian Models","text":"conformalbayes provides functions construct finite-sample calibrated predictive intervals Bayesian models, following approach Barber et al. (2021). intervals calculated efficiently using importance sampling leave-one-residuals. default, intervals also reflect relative uncertainty Bayesian model, using locally-weighted conformal methods Lei et al. (2018).","code":""},{"path":"https://corymccartan.github.io/conformalbayes/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Jackknife(+) Predictive Intervals for Bayesian Models","text":"can install development version conformalbayes :","code":"# install.packages(\"devtools\") devtools::install_github(\"CoryMcCartan/conformalbayes\")"},{"path":"https://corymccartan.github.io/conformalbayes/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Jackknife(+) Predictive Intervals for Bayesian Models","text":"Read Getting Started page.","code":"library(rstanarm) library(conformalbayes) data(\"Loblolly\")  fit_idx = sample(nrow(Loblolly), 50) d_fit = Loblolly[fit_idx, ] d_test = Loblolly[-fit_idx, ]  # fit a simple linear regression m = stan_glm(height ~ sqrt(age), data=d_fit,     chains=1, control=list(adapt_delta=0.999), refresh=0)  # prepare conformal predictions m = loo_conformal(m)  # make predictive intervals pred_ci = predictive_interval(m, newdata=d_test, prob=0.9) print(head(pred_ci)) #>             5%       95% #> 1  -0.15888598  5.600095 #> 29 25.43314599 30.988491 #> 57 48.67648127 54.182655 #> 2  -0.09561987  5.447242 #> 30 25.42970114 30.938488 #> 72 58.01173187 63.596592  # are we covering? mean(pred_ci[, \"5%\"] <= d_test$height &          d_test$height <= pred_ci[, \"95%\"]) #> [1] 0.9117647"},{"path":"https://corymccartan.github.io/conformalbayes/index.html","id":"citations","dir":"","previous_headings":"","what":"Citations","title":"Jackknife(+) Predictive Intervals for Bayesian Models","text":"Barber, R. F., Candes, E. J., Ramdas, ., & Tibshirani, R. J. (2021). Predictive inference jackknife+. Annals Statistics, 49(1), 486-507. Lei, J., G’Sell, M., Rinaldo, ., Tibshirani, R. J., & Wasserman, L. (2018). Distribution-free predictive inference regression. Journal American Statistical Association, 113(523), 1094-1111.","code":""},{"path":"https://corymccartan.github.io/conformalbayes/reference/conformalbayes-package.html","id":null,"dir":"Reference","previous_headings":"","what":"conformalbayes: Jackknife(+) Predictive Intervals for Bayesian Models — conformalbayes-package","title":"conformalbayes: Jackknife(+) Predictive Intervals for Bayesian Models — conformalbayes-package","text":"Provides functions construct finite-sample calibrated predictive intervals Bayesian models, following approach Barber et al. (2021) <doi:10.1214/20-AOS1965>. intervals calculated efficiently using importance sampling leave-one-residuals. default, intervals also reflect relative uncertainty Bayesian model, using locally-weighted conformal methods Lei et al. (2018) <doi:10.1080/01621459.2017.1307116>.","code":""},{"path":[]},{"path":"https://corymccartan.github.io/conformalbayes/reference/conformalbayes-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"conformalbayes: Jackknife(+) Predictive Intervals for Bayesian Models — conformalbayes-package","text":"Maintainer: Cory McCartan cmccartan@g.harvard.edu (ORCID)","code":""},{"path":"https://corymccartan.github.io/conformalbayes/reference/loo_conformal.html","id":null,"dir":"Reference","previous_headings":"","what":"Enable leave-one-out conformal predictive intervals for a fit model — loo_conformal","title":"Enable leave-one-out conformal predictive intervals for a fit model — loo_conformal","text":"Prepares jackknife(+) conformal prediction performing Pareto-smoothed importance sampling yield leave-one-residuals.","code":""},{"path":"https://corymccartan.github.io/conformalbayes/reference/loo_conformal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Enable leave-one-out conformal predictive intervals for a fit model — loo_conformal","text":"","code":"loo_conformal(fit, ...)  # S3 method for default loo_conformal(fit, truth, chain = NULL, est_fun = c(\"mean\", \"median\"), ...)  # S3 method for stanreg loo_conformal(fit, est_fun = c(\"mean\", \"median\"), ...)  # S3 method for brmsfit loo_conformal(fit, est_fun = c(\"mean\", \"median\"), ...)"},{"path":"https://corymccartan.github.io/conformalbayes/reference/loo_conformal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Enable leave-one-out conformal predictive intervals for a fit model — loo_conformal","text":"fit Model fit; object posterior_predict() log_lik() methods. Can also array posterior predictions. ... Ignored. truth True values predict. required rstanarm brms models. chain integer vector identifying chain numbers posterior draws. provided multiple chains used. est_fun Whether use posterior mean (default) median point estimate.","code":""},{"path":"https://corymccartan.github.io/conformalbayes/reference/loo_conformal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Enable leave-one-out conformal predictive intervals for a fit model — loo_conformal","text":"modified fit object additional class conformal. Calling predictive_interval() new object yield conformal intervals.","code":""},{"path":"https://corymccartan.github.io/conformalbayes/reference/loo_conformal.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Enable leave-one-out conformal predictive intervals for a fit model — loo_conformal","text":"Vehtari, ., Simpson, D., Gelman, ., Yao, Y., & Gabry, J. (2015). Pareto smoothed importance sampling. arXiv preprint arXiv:1507.02646.","code":""},{"path":"https://corymccartan.github.io/conformalbayes/reference/loo_conformal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Enable leave-one-out conformal predictive intervals for a fit model — loo_conformal","text":"","code":"if (requireNamespace(\"rstanarm\", quietly=TRUE)) suppressWarnings({     library(rstanarm)     # fit a simple linear regression     m = stan_glm(mpg ~ disp + cyl, data=mtcars,         chains=1, iter=1000,         control=list(adapt_delta=0.999), refresh=0)      loo_conformal(m) }) #> Loading required package: Rcpp #> This is rstanarm version 2.21.1 #> - See https://mc-stan.org/rstanarm/articles/priors for changes to default priors! #> - Default priors may change, so it's safest to specify priors, even if equivalent to the defaults. #> - For execution on a local, multicore CPU with excess RAM we recommend calling #>   options(mc.cores = parallel::detectCores()) #> stan_glm #>  family:       gaussian [identity] #>  formula:      mpg ~ disp + cyl #>  observations: 32 #>  predictors:   3 #> ------ #>             Median MAD_SD #> (Intercept) 34.5    2.6   #> disp         0.0    0.0   #> cyl         -1.5    0.7   #>  #> Auxiliary parameter(s): #>       Median MAD_SD #> sigma 3.1    0.4    #>  #> ------ #> * For help interpreting the printed output see ?print.stanreg #> * For info on the priors used see ?prior_summary.stanreg #> (conformalbayes enabled, with estimated CI inflation factor 0.94)"},{"path":"https://corymccartan.github.io/conformalbayes/reference/predictive_interval.conformal.html","id":null,"dir":"Reference","previous_headings":"","what":"Jackknife(+) predictive intervals — predictive_interval.conformal","title":"Jackknife(+) predictive intervals — predictive_interval.conformal","text":"Construct finite-sample calibrated predictive intervals Bayesian models, following approach Barber et al. (2021). default, intervals also reflect relative uncertainty Bayesian model, using locally-weighted conformal methods Lei et al. (2018).","code":""},{"path":"https://corymccartan.github.io/conformalbayes/reference/predictive_interval.conformal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Jackknife(+) predictive intervals — predictive_interval.conformal","text":"","code":"# S3 method for conformal predictive_interval(object, probs = 0.9, plus = NULL, local = TRUE, ...)"},{"path":"https://corymccartan.github.io/conformalbayes/reference/predictive_interval.conformal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Jackknife(+) predictive intervals — predictive_interval.conformal","text":"object fitted model passed loo_conformal() probs coverage probabilities calculate intervals . Empirically, coverage rate constructed intervals generally match probabilities, theoretical guarantee probability \\(1-\\alpha\\) coverage least \\(1-2\\alpha\\), plus=TRUE (). plus TRUE, construct jackknife+ intervals, theoretical guarantee. require higher computational costs, scale number training prediction points. Defaults TRUE numbers less 500. local TRUE (default), perform locally-weighted conformal inference. inflate width predictive intervals constant amount across predictions, preserving relative amount uncertainty captured model. FALSE, predictive intervals (nearly) width. ... arguments posterior_predict() method object.","code":""},{"path":"https://corymccartan.github.io/conformalbayes/reference/predictive_interval.conformal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Jackknife(+) predictive intervals — predictive_interval.conformal","text":"matrix number rows matching number predictions. Columns labeled percentile corresponding probs; e.g. probs=0.9 columns 5% 95%.","code":""},{"path":"https://corymccartan.github.io/conformalbayes/reference/predictive_interval.conformal.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Jackknife(+) predictive intervals — predictive_interval.conformal","text":"Barber, R. F., Candes, E. J., Ramdas, ., & Tibshirani, R. J. (2021). Predictive inference jackknife+. Annals Statistics, 49(1), 486-507. Lei, J., G’Sell, M., Rinaldo, ., Tibshirani, R. J., & Wasserman, L. (2018). Distribution-free predictive inference regression. Journal American Statistical Association, 113(523), 1094-1111.","code":""},{"path":"https://corymccartan.github.io/conformalbayes/reference/predictive_interval.conformal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Jackknife(+) predictive intervals — predictive_interval.conformal","text":"","code":"if (requireNamespace(\"rstanarm\", quietly=TRUE)) suppressWarnings({     library(rstanarm)     # fit a simple linear regression     m = stan_glm(mpg ~ disp + cyl, data=mtcars,         chains=1, iter=1000,         control=list(adapt_delta=0.999), refresh=0)      m = loo_conformal(m)     # make predictive intervals     predictive_interval(m) }) #>                            5%      95% #> Mazda RX4           16.667700 27.31689 #> Mazda RX4 Wag       16.997255 27.03680 #> Datsun 710          21.108888 31.79334 #> Hornet 4 Drive      14.761390 25.09792 #> Hornet Sportabout    9.632017 19.68625 #> Valiant             15.526111 25.92461 #> Duster 360           9.872493 19.99205 #> Merc 240D           20.620882 30.86736 #> Merc 230            20.592596 30.84949 #> Merc 280            16.844915 27.24240 #> Merc 280C           16.429387 27.10436 #> Merc 450SE          10.659640 21.45813 #> Merc 450SL          11.180052 21.90852 #> Merc 450SLC         10.902567 21.64178 #> Cadillac Fleetwood   7.354248 17.66190 #> Lincoln Continental  7.373280 18.29625 #> Chrysler Imperial    7.760096 18.02178 #> Fiat 128            21.507135 31.80113 #> Honda Civic         21.858498 31.76223 #> Toyota Corolla      21.881896 32.58834 #> Toyota Corona       20.780409 31.14529 #> Dodge Challenger    10.185459 20.52941 #> AMC Javelin         10.802987 20.68960 #> Camaro Z28           9.588553 20.05670 #> Pontiac Firebird     8.185185 18.87413 #> Fiat X1-9           21.968140 32.12052 #> Porsche 914-2       21.105725 31.03256 #> Lotus Europa        21.317121 31.47281 #> Ford Pantera L       9.797254 20.02230 #> Ferrari Dino        17.045255 27.50444 #> Maserati Bora       10.541244 20.56818 #> Volvo 142E          21.359283 31.51131"},{"path":"https://corymccartan.github.io/conformalbayes/news/index.html","id":"conformalbayes-010","dir":"Changelog","previous_headings":"","what":"conformalbayes 0.1.0","title":"conformalbayes 0.1.0","text":"Basic jackknife+ predictions optional local weighting Tests vignettes","code":""}]
