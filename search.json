[{"path":"http://corymccartan.com/conformalbayes/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Cory McCartan Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"http://corymccartan.com/conformalbayes/articles/conformalbayes.html","id":"citations","dir":"Articles","previous_headings":"","what":"Citations","title":"Introduction to conformalbayes","text":"Barber, R. F., Candes, E. J., Ramdas, ., & Tibshirani, R. J. (2021). Predictive inference jackknife+. Annals Statistics, 49(1), 486-507. Lei, J., G’Sell, M., Rinaldo, ., Tibshirani, R. J., & Wasserman, L. (2018). Distribution-free predictive inference regression. Journal American Statistical Association, 113(523), 1094-1111.","code":""},{"path":"http://corymccartan.com/conformalbayes/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Cory McCartan. Author, maintainer.","code":""},{"path":"http://corymccartan.com/conformalbayes/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"McCartan C (2025). conformalbayes: Jackknife(+) Predictive Intervals Bayesian Models. R package version 0.1.3, https://github.com/CoryMcCartan/conformalbayes.","code":"@Manual{,   title = {conformalbayes: Jackknife(+) Predictive Intervals for Bayesian Models},   author = {Cory McCartan},   year = {2025},   note = {R package version 0.1.3},   url = {https://github.com/CoryMcCartan/conformalbayes}, }"},{"path":"http://corymccartan.com/conformalbayes/index.html","id":"conformalbayes-","dir":"","previous_headings":"","what":"Jackknife(+) Predictive Intervals for Bayesian Models","title":"Jackknife(+) Predictive Intervals for Bayesian Models","text":"conformalbayes provides functions construct finite-sample calibrated predictive intervals Bayesian models, following approach Barber et al. (2021). intervals calculated efficiently using importance sampling leave-one-residuals. default, intervals also reflect relative uncertainty Bayesian model, using locally-weighted conformal methods Lei et al. (2018).","code":""},{"path":"http://corymccartan.com/conformalbayes/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Jackknife(+) Predictive Intervals for Bayesian Models","text":"can install development version conformalbayes :","code":"# install.packages(\"devtools\") devtools::install_github(\"CoryMcCartan/conformalbayes\")"},{"path":"http://corymccartan.com/conformalbayes/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Jackknife(+) Predictive Intervals for Bayesian Models","text":"Read Getting Started page.","code":"library(rstanarm) library(conformalbayes) data(\"Loblolly\")  fit_idx = sample(nrow(Loblolly), 50) d_fit = Loblolly[fit_idx, ] d_test = Loblolly[-fit_idx, ]  # fit a simple linear regression m = stan_glm(height ~ sqrt(age), data=d_fit,     chains=1, control=list(adapt_delta=0.999), refresh=0)  # prepare conformal predictions m = loo_conformal(m)  # make predictive intervals pred_ci = predictive_interval(m, newdata=d_test, prob=0.9) print(head(pred_ci)) #>             5%       95% #> 1  -0.15888598  5.600095 #> 29 25.43314599 30.988491 #> 57 48.67648127 54.182655 #> 2  -0.09561987  5.447242 #> 30 25.42970114 30.938488 #> 72 58.01173187 63.596592  # are we covering? mean(pred_ci[, \"5%\"] <= d_test$height &          d_test$height <= pred_ci[, \"95%\"]) #> [1] 0.9117647"},{"path":"http://corymccartan.com/conformalbayes/index.html","id":"citations","dir":"","previous_headings":"","what":"Citations","title":"Jackknife(+) Predictive Intervals for Bayesian Models","text":"Barber, R. F., Candes, E. J., Ramdas, ., & Tibshirani, R. J. (2021). Predictive inference jackknife+. Annals Statistics, 49(1), 486-507. Lei, J., G’Sell, M., Rinaldo, ., Tibshirani, R. J., & Wasserman, L. (2018). Distribution-free predictive inference regression. Journal American Statistical Association, 113(523), 1094-1111.","code":""},{"path":"http://corymccartan.com/conformalbayes/reference/conformalbayes-package.html","id":null,"dir":"Reference","previous_headings":"","what":"conformalbayes: Jackknife(+) Predictive Intervals for Bayesian Models — conformalbayes-package","title":"conformalbayes: Jackknife(+) Predictive Intervals for Bayesian Models — conformalbayes-package","text":"Provides functions construct finite-sample calibrated predictive intervals Bayesian models, following approach Barber et al. (2021) doi:10.1214/20-AOS1965 . intervals calculated efficiently using importance sampling leave-one-residuals. default, intervals also reflect relative uncertainty Bayesian model, using locally-weighted conformal methods Lei et al. (2018) doi:10.1080/01621459.2017.1307116 .","code":""},{"path":[]},{"path":"http://corymccartan.com/conformalbayes/reference/conformalbayes-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"conformalbayes: Jackknife(+) Predictive Intervals for Bayesian Models — conformalbayes-package","text":"Maintainer: Cory McCartan cmccartan@g.harvard.edu (ORCID)","code":""},{"path":"http://corymccartan.com/conformalbayes/reference/loo_conformal.html","id":null,"dir":"Reference","previous_headings":"","what":"Enable leave-one-out conformal predictive intervals for a fit model — loo_conformal","title":"Enable leave-one-out conformal predictive intervals for a fit model — loo_conformal","text":"Prepares jackknife(+) conformal prediction performing Pareto-smoothed importance sampling yield leave-one-residuals.","code":""},{"path":"http://corymccartan.com/conformalbayes/reference/loo_conformal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Enable leave-one-out conformal predictive intervals for a fit model — loo_conformal","text":"","code":"loo_conformal(fit, ...)  # Default S3 method loo_conformal(   fit,   truth,   chain = NULL,   trans = function(x) x,   inv_trans = function(x) x,   est_fun = c(\"mean\", \"median\"),   ... )  # S3 method for class 'stanreg' loo_conformal(   fit,   trans = function(x) x,   inv_trans = function(x) x,   est_fun = c(\"mean\", \"median\"),   ... )  # S3 method for class 'brmsfit' loo_conformal(   fit,   trans = function(x) x,   inv_trans = function(x) x,   est_fun = c(\"mean\", \"median\"),   ... )"},{"path":"http://corymccartan.com/conformalbayes/reference/loo_conformal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Enable leave-one-out conformal predictive intervals for a fit model — loo_conformal","text":"fit Model fit; object posterior_predict() log_lik() methods. Can also array posterior predictions. ... Ignored. truth True values predict. required rstanarm brms models. chain integer vector identifying chain numbers posterior draws. provided multiple chains used. trans, inv_trans pair functions transform predictions performing conformal inference. est_fun Whether use posterior mean (default) median point estimate.","code":""},{"path":"http://corymccartan.com/conformalbayes/reference/loo_conformal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Enable leave-one-out conformal predictive intervals for a fit model — loo_conformal","text":"modified fit object additional class conformal. Calling predictive_interval() new object yield conformal intervals.","code":""},{"path":"http://corymccartan.com/conformalbayes/reference/loo_conformal.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Enable leave-one-out conformal predictive intervals for a fit model — loo_conformal","text":"Vehtari, ., Simpson, D., Gelman, ., Yao, Y., & Gabry, J. (2015). Pareto smoothed importance sampling. arXiv preprint arXiv:1507.02646.","code":""},{"path":"http://corymccartan.com/conformalbayes/reference/loo_conformal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Enable leave-one-out conformal predictive intervals for a fit model — loo_conformal","text":"","code":"if (requireNamespace(\"rstanarm\", quietly=TRUE)) suppressWarnings({     library(rstanarm)     # fit a simple linear regression     m = stan_glm(mpg ~ disp + cyl, data=mtcars,         chains=1, iter=500,         control=list(adapt_delta=0.999), refresh=0)      loo_conformal(m) }) #> Loading required package: Rcpp #> This is rstanarm version 2.32.1 #> - See https://mc-stan.org/rstanarm/articles/priors for changes to default priors! #> - Default priors may change, so it's safest to specify priors, even if equivalent to the defaults. #> - For execution on a local, multicore CPU with excess RAM we recommend calling #>   options(mc.cores = parallel::detectCores()) #> stan_glm #>  family:       gaussian [identity] #>  formula:      mpg ~ disp + cyl #>  observations: 32 #>  predictors:   3 #> ------ #>             Median MAD_SD #> (Intercept) 34.9    2.5   #> disp         0.0    0.0   #> cyl         -1.7    0.7   #>  #> Auxiliary parameter(s): #>       Median MAD_SD #> sigma 3.1    0.4    #>  #> ------ #> * For help interpreting the printed output see ?print.stanreg #> * For info on the priors used see ?prior_summary.stanreg #> (conformalbayes enabled, with estimated CI inflation factor 0.99 and #> transformation pair function (x) x and function (x) x)"},{"path":"http://corymccartan.com/conformalbayes/reference/predictive_interval.conformal.html","id":null,"dir":"Reference","previous_headings":"","what":"Jackknife(+) predictive intervals — predictive_interval.conformal","title":"Jackknife(+) predictive intervals — predictive_interval.conformal","text":"Construct finite-sample calibrated predictive intervals Bayesian models, following approach Barber et al. (2021). default, intervals also reflect relative uncertainty Bayesian model, using locally-weighted conformal methods Lei et al. (2018).","code":""},{"path":"http://corymccartan.com/conformalbayes/reference/predictive_interval.conformal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Jackknife(+) predictive intervals — predictive_interval.conformal","text":"","code":"# S3 method for class 'conformal' predictive_interval(object, probs = 0.9, plus = NULL, local = TRUE, ...)"},{"path":"http://corymccartan.com/conformalbayes/reference/predictive_interval.conformal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Jackknife(+) predictive intervals — predictive_interval.conformal","text":"object fitted model passed loo_conformal() probs coverage probabilities calculate intervals . Empirically, coverage rate constructed intervals generally match probabilities, theoretical guarantee probability \\(1-\\alpha\\) coverage least \\(1-2\\alpha\\), plus=TRUE (). plus TRUE, construct jackknife+ intervals, theoretical guarantee. require higher computational costs, scale number training prediction points. Defaults TRUE numbers less 500. local TRUE (default), perform locally-weighted conformal inference. inflate width predictive intervals constant amount across predictions, preserving relative amount uncertainty captured model. FALSE, predictive intervals (nearly) width. ... arguments posterior_predict() method object.","code":""},{"path":"http://corymccartan.com/conformalbayes/reference/predictive_interval.conformal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Jackknife(+) predictive intervals — predictive_interval.conformal","text":"matrix number rows matching number predictions. Columns labeled percentile corresponding probs; e.g. probs=0.9 columns 5% 95%.","code":""},{"path":"http://corymccartan.com/conformalbayes/reference/predictive_interval.conformal.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Jackknife(+) predictive intervals — predictive_interval.conformal","text":"Barber, R. F., Candes, E. J., Ramdas, ., & Tibshirani, R. J. (2021). Predictive inference jackknife+. Annals Statistics, 49(1), 486-507. Lei, J., G’Sell, M., Rinaldo, ., Tibshirani, R. J., & Wasserman, L. (2018). Distribution-free predictive inference regression. Journal American Statistical Association, 113(523), 1094-1111.","code":""},{"path":"http://corymccartan.com/conformalbayes/reference/predictive_interval.conformal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Jackknife(+) predictive intervals — predictive_interval.conformal","text":"","code":"if (requireNamespace(\"rstanarm\", quietly=TRUE)) suppressWarnings({     library(rstanarm)     # fit a simple linear regression     m = stan_glm(mpg ~ disp + cyl, data=mtcars,         chains=1, iter=500,         control=list(adapt_delta=0.999), refresh=0)      m = loo_conformal(m)     # make predictive intervals     predictive_interval(m) }) #>                            5%      95% #> Mazda RX4           16.381827 28.18769 #> Mazda RX4 Wag       16.614507 26.94348 #> Datsun 710          20.804507 31.90627 #> Hornet 4 Drive      15.086216 24.68408 #> Hornet Sportabout    9.529887 20.03695 #> Valiant             15.603716 26.06700 #> Duster 360           8.791614 19.63106 #> Merc 240D           19.871652 30.89690 #> Merc 230            20.277989 31.29874 #> Merc 280            16.401084 27.43578 #> Merc 280C           15.997483 27.16487 #> Merc 450SE          11.039505 21.84140 #> Merc 450SL          11.272833 20.92848 #> Merc 450SLC         10.685265 21.95885 #> Cadillac Fleetwood   6.719272 17.16997 #> Lincoln Continental  7.123097 17.73893 #> Chrysler Imperial    7.520443 18.17208 #> Fiat 128            21.301428 32.33201 #> Honda Civic         21.850400 32.43134 #> Toyota Corolla      21.333528 32.55120 #> Toyota Corona       21.126467 31.13913 #> Dodge Challenger    10.087606 20.10560 #> AMC Javelin          9.886367 20.76156 #> Camaro Z28           9.365667 20.26677 #> Pontiac Firebird     8.625435 18.89637 #> Fiat X1-9           21.365234 32.22251 #> Porsche 914-2       20.851954 31.24738 #> Lotus Europa        21.651287 32.48514 #> Ford Pantera L       8.940693 20.53603 #> Ferrari Dino        16.596912 27.61475 #> Maserati Bora        9.957017 20.86331 #> Volvo 142E          20.487699 31.29541"},{"path":"http://corymccartan.com/conformalbayes/news/index.html","id":"conformalbayes-013","dir":"Changelog","previous_headings":"","what":"conformalbayes 0.1.3","title":"conformalbayes 0.1.3","text":"Update package anchors documentation","code":""},{"path":"http://corymccartan.com/conformalbayes/news/index.html","id":"conformalbayes-011","dir":"Changelog","previous_headings":"","what":"conformalbayes 0.1.1","title":"conformalbayes 0.1.1","text":"Update URLs","code":""},{"path":"http://corymccartan.com/conformalbayes/news/index.html","id":"conformalbayes-011-1","dir":"Changelog","previous_headings":"","what":"conformalbayes 0.1.1","title":"conformalbayes 0.1.1","text":"Fix documentation","code":""},{"path":"http://corymccartan.com/conformalbayes/news/index.html","id":"conformalbayes-010","dir":"Changelog","previous_headings":"","what":"conformalbayes 0.1.0","title":"conformalbayes 0.1.0","text":"CRAN release: 2022-03-10 Basic jackknife+ predictions optional local weighting Tests vignettes","code":""}]
